{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zohan\\\\Desktop\\\\weather-app\\\\client\\\\src\\\\Components\\\\Weather\\\\Weather.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = props => {\n  console.log(props.weather);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: () => {\n      if (props.weather !== undefined) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Date: \", props.weather.applicable_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"h\", {\n            children: [\"Maximum Temperature :\", props.weather.max_temp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true);\n      } else {\n        return null;\n      }\n    }\n  }, void 0, false);\n};\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/zohan/Desktop/weather-app/client/src/Components/Weather/Weather.js"],"names":["React","Weather","props","console","log","weather","undefined","applicable_date","max_temp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACA,sBACI;AAAA,cACC,MAAI;AACD,UAAGH,KAAK,CAACG,OAAN,KAAkBC,SAArB,EAA+B;AAC3B,4BACI;AAAA,kCACD;AAAA,iCAAWJ,KAAK,CAACG,OAAN,CAAcE,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,eAED;AAAA,gDAAyBL,KAAK,CAACG,OAAN,CAAcG,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC;AAAA,wBADJ;AAKE,OANN,MAOM;AACA,eAAQ,IAAR;AACH;AACN;AAZD,mBADJ;AAmBP,CArBD;;KAAMP,O;AAuBN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Weather = (props) => {\r\n        console.log(props.weather)\r\n        return(\r\n            <>\r\n            {()=>{\r\n                if(props.weather !== undefined){\r\n                    return(\r\n                        <>\r\n                       <h1>Date: {props.weather.applicable_date}</h1>\r\n                       <h>Maximum Temperature :{props.weather.max_temp}</h>\r\n                        </>\r\n                    )}\r\n                  else{\r\n                      return (null);\r\n                  }\r\n            }\r\n            \r\n            }\r\n            \r\n            </>\r\n        )\r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}